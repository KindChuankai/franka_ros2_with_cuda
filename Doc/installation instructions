# -------------------------- matters need attention -------------------------- #

# If you are using NVIDIA in the container, you need to install it on the host machine.
# You can follow the official guide:
https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html


# about librealsense
When installing the binary library librealsense2-dkms for Librealsense, the linux kernel needs to be modified.
This cannot be done in docker, so it needs to be installed on the host machine.

# you can install
sudo mkdir -p /etc/apt/keyrings \
    && sudo curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo tee /etc/apt/keyrings/librealsense.pgp > /dev/null \
    && echo "deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo `lsb_release -cs` main" | \
       sudo tee /etc/apt/sources.list.d/librealsense.list \
    && sudo apt-get update && sudo apt-get install -y --no-install-recommends \
    librealsense2-dkms

however, you can't install librealsense2-dev in the host machine, because it will conflict with RT kernel.
so you have to compile and install librealsense2-dev from source code.


# --------------------------- before docker compose -------------------------- #
echo -e "USER_UID=$(id -u $USER)\nUSER_GID=$(id -g $USER)" > .env

# ------------------------------ docker compose ------------------------------ #
# docker create gpu or cpu version of franka_ros2 images
docker compose -f docker-compose-cpu.yml build
docker compose -f docker-compose-gpu.yml build
# activate container
docker compose -f docker-compose-cpu.yml up -d
docker compose -f docker-compose-gpu.yml up -d
# enter container
docker exec -it <container_name> /bin/bash
# exit container
exit


# ------------ after docker compose and in container path /ros2_ws ----------- #

vcs import src < src/franka.repos --recursive --skip-existing

colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

source install/setpu.bash

# ----- if something wrong with franka_semantic_description, you can try: ---- #
modify the package.xml of franka_semantic_description, add dependencies controller_interface:
<depend>rclcpp</depend>
  <depend>franka_msgs</depend>
  <depend>sensor_msgs</depend>
  <depend>geometry_msgs</depend>
  <depend>hardware_interface</depend>
  <depend>controller_interface</depend> # add
  <depend>franka_hardware</depend>

modify the CMakeLists.txt of franka_semantic_description, add dependencies controller_interface:
set(THIS_PACKAGE_INCLUDE_DEPENDS
    Franka
    franka_hardware
    franka_msgs
    geometry_msgs
    sensor_msgs
    hardware_interface
    controller_interface
    rclcpp_lifecycle
    urdf)

# -------------- to check all the franka ros2 pkg configuration -------------- #
ros2 run xacro xacro /ros2_ws/src/franka_description/robots/fr3/fr3.urdf.xacro -o fr3.urdf ros2_control:=true robot_ip:=172.16.0.2


# -------------------- here ends the installation process -------------------- #
